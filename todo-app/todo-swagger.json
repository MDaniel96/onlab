{
  "swagger": "2.0",
  "info": {
    "description": "This is a server for storing todos.",
    "version": "1.0.0",
    "title": "Todo list",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "morvai.daniel96@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "todo.swagger.io",
  "basePath": "/v2",
  "tags": [
    {
      "name": "todo",
      "description": "Todo routes"
    },
    {
      "name": "user",
      "description": "User routes"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/todo/{id}": {
      "post": {
        "tags": [
          "todo"
        ],
        "summary": "Add a new todo to user",
        "description": "",
        "operationId": "addTodo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Todo to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Todo"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Insert OK"
          },
          "500": {
            "description": "Error"
          }
        }
      },
      "put": {
        "tags": [
          "todo"
        ],
        "summary": "Update an existing todo",
        "description": "",
        "operationId": "updateTodo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Todo to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Todo"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of todo to be updated",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful"
          },
          "404": {
            "description": "Todo not found"
          },
          "500": {
            "description": "Error"
          }
        }
      },
      "delete": {
        "tags": [
          "todo"
        ],
        "summary": "Delete an existing todo",
        "description": "",
        "operationId": "deleteTodo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of todo to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Todo not found"
          },
          "500": {
            "description": "Error"
          }
        }
      },
      "get": {
        "tags": [
          "todo"
        ],
        "summary": "Gets todos of user",
        "description": "",
        "operationId": "getTodo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Todo"
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Add a new user",
        "description": "",
        "operationId": "addUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Insert OK"
          },
          "409": {
            "description": "User already exists"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Todo": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "created": {
          "type": "integer"
        },
        "done": {
          "type": "boolean"
        }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}